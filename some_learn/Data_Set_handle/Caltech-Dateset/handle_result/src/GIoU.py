import numpy as np

def Giou_np(bbox_p, bbox_g):
    """
    :param bbox_p: predict of bbox(N,4)(x1,y1,x2,y2)
    :param bbox_g: groundtruth of bbox(N,4)(x1,y1,x2,y2)
    :return:
    """
    # for details should go to https://arxiv.org/pdf/1902.09630.pdf
    # ensure predict's bbox form
    x1p = np.minimum(bbox_p[:, 0], bbox_p[:, 2]).reshape(-1,1)
    x2p = np.maximum(bbox_p[:, 0], bbox_p[:, 2]).reshape(-1,1)
    y1p = np.minimum(bbox_p[:, 1], bbox_p[:, 3]).reshape(-1,1)
    y2p = np.maximum(bbox_p[:, 1], bbox_p[:, 3]).reshape(-1,1)

    bbox_p = np.concatenate([x1p, y1p, x2p, y2p], axis=1)
    # calc area of Bg
    area_p = (bbox_p[:, 2] - bbox_p[:, 0]) * (bbox_p[:, 3] - bbox_p[:, 1])
    # calc area of Bp
    area_g = (bbox_g[:, 2] - bbox_g[:, 0]) * (bbox_g[:, 3] - bbox_g[:, 1])

    # cal intersection
    x1I = np.maximum(bbox_p[:, 0], bbox_g[:, 0])
    y1I = np.maximum(bbox_p[:, 1], bbox_g[:, 1])
    x2I = np.minimum(bbox_p[:, 2], bbox_g[:, 2])
    y2I = np.minimum(bbox_p[:, 3], bbox_g[:, 3])
    I = np.maximum((y2I - y1I), 0) * np.maximum((x2I - x1I), 0)

    # find enclosing box
    x1C = np.minimum(bbox_p[:, 0], bbox_g[:, 0])
    y1C = np.minimum(bbox_p[:, 1], bbox_g[:, 1])
    x2C = np.maximum(bbox_p[:, 2], bbox_g[:, 2])
    y2C = np.maximum(bbox_p[:, 3], bbox_g[:, 3])

    # calc area of Bc
    area_c = (x2C - x1C) * (y2C - y1C)
    U = area_p + area_g - I
    iou = 1.0 * I / U

    # Giou
    giou = iou - (area_c - U) / area_c

    # loss_iou = 1 - iou loss_giou = 1 - giou
    loss_iou = 1.0 - iou
    loss_giou = 1.0 - giou
    return loss_giou.sum()

# def giou_tf




if __name__ == '__main__':

    p = np.array([[-0.18250875, -1.3577023 ,  0.9488143 ,  0.5144467 ],
       [ 0.33038038,  0.32879767,  0.67746216,  0.594175  ],
       [-0.9893435 , -0.10472977,  0.9345463 ,  0.07220897],
       [-1.616441  ,  0.03094323, -0.45762548,  0.62379736],
       [ 0.18842548, -0.8693906 ,  0.47229794,  0.6398874 ],
       [-1.802841  , -0.90967286, -0.6943913 ,  0.7784991 ],
       [ 0.32287917, -0.5904494 ,  0.35581705,  0.54114413],
       [ 0.40949532,  0.91592467,  0.6437646 ,  1.6126087 ],
       [-1.7864584 , -0.36056075,  0.9759792 ,  0.29635558],
       [-0.5621916 , -0.06925172, -0.02520445,  0.47510144],
       [-0.22989908,  0.63728184,  2.3368156 ,  0.6511308 ],
       [-1.9549766 , -0.5688884 ,  1.2302132 ,  0.20894   ],
       [-0.6193455 , -0.8241258 ,  0.27520066,  0.02973017],
       [ 0.3793066 , -1.2000495 ,  0.84007215,  1.2171184 ],
       [-2.3636382 ,  1.8017061 ,  0.6332752 ,  2.4559858 ],
       [-0.21699077,  0.1473518 ,  0.9753105 ,  0.2215742 ],
       [-1.3890506 ,  0.3344269 , -0.5117309 ,  2.2827618 ],
       [-0.76771086,  0.27568465,  0.66819274,  0.3560678 ],
       [-1.3060564 , -2.8409069 ,  0.7959951 ,  0.6648402 ],
       [-1.2371234 , -2.3058078 ,  1.5732927 ,  0.26145247],
       [ 0.2913381 , -0.7111582 ,  1.724587  ,  0.6694881 ],
       [-1.8298992 , -2.6366885 ,  0.20842186,  1.1749649 ],
       [-2.8523908 , -0.695458  ,  0.51348895,  0.18401092],
       [ 0.3180164 , -1.3315113 ,  2.1517186 , -0.6098975 ],
       [-1.4415233 ,  0.97922325, -0.80226785,  2.1604238 ],
       [-0.85483027, -0.5370655 ,  0.5140602 ,  1.4396396 ],
       [-0.10645679,  0.26345435, -0.02948412,  2.267139  ],
       [-0.2720421 , -1.0935323 ,  1.2012489 , -0.37689883],
       [-0.7442005 , -0.47104937,  3.4580467 ,  1.3318877 ],
       [-0.04503583, -2.5257618 ,  0.3621931 ,  0.075903  ],
       [-0.91438305,  0.14362186,  1.2871653 ,  0.63727   ],
       [-2.1609778 , -0.3975478 , -0.31836802,  0.5659803 ],
       [-1.9448205 , -0.6874028 ,  1.012858  ,  0.8819293 ],
       [ 0.5716574 , -0.10830486,  2.4761298 ,  0.7670214 ],
       [ 0.6447468 ,  0.9290685 ,  0.689214  ,  2.2558177 ],
       [-0.16607608,  0.01224385, -0.03717052,  0.47106084],
       [-0.6095545 , -0.44022524, -0.19408521, -0.10358856],
       [-0.30209798,  0.05169417, -0.06580389,  0.06763739],
       [-0.4171232 , -0.3976421 , -0.21902762,  0.43469062],
       [-0.0857117 , -0.04734498,  0.04273854,  0.12623908],
       [-0.70241517, -0.0528505 , -0.04479108,  0.12739344],
       [-0.12826404, -0.14508055, -0.05338851,  0.27549392],
       [ 0.26158914, -0.25911337,  0.37752604,  0.3036662 ],
       [-0.4860171 ,  0.04979471, -0.05695293,  0.05330182],
       [-0.00432778, -0.08248056,  0.38420963,  0.39938444],
       [ 0.02767709, -0.48475876,  0.18334256, -0.31049168],
       [ 0.17045616, -0.1864587 ,  0.26151648,  0.31361958],
       [-0.5486762 , -0.13970158, -0.02606179, -0.00873916],
       [-0.02573989, -0.16784148,  0.07067174,  0.17207897],
       [-0.14890198, -0.10926997, -0.05742864,  0.07876548],
       [-0.15732649,  0.0375639 , -0.03834793,  0.06674485],
       [-0.22295192, -0.0263948 , -0.0271804 ,  0.01609203],
       [ 0.09764244, -0.05737636,  0.306972  ,  1.3260298 ]])
    p[:,0]=p[:,0]*640.0
    p[:,1]=p[:,1]*480.0
    p[:,2]=p[:,2]*640.0
    p[:,3]=p[:,3]*480.0
    g = np.array([[ 0.58990556,  1.9041361 ,  0.95336205, -1.4204836 ],
       [-1.1949369 ,  1.9041361 ,  0.95336205, -1.4204836 ],
       [ 2.374748  ,  1.1723505 ,  0.95336205, -1.4204836 ],
       [ 0.68822306,  1.3677423 ,  1.7241151 , -0.64973044],
       [ 0.58990556,  1.1723505 ,  0.95336205, -1.4204836 ],
       [-1.3940929 ,  1.3677423 ,  1.7241151 , -0.64973044],
       [-1.1949369 ,  1.1723505 ,  0.95336205, -1.4204836 ],
       [ 3.324647  ,  0.61679095,  2.635723  ,  0.2618776 ],
       [ 2.770539  ,  0.5139925 ,  1.7241151 , -0.64973044],
       [ 2.374748  ,  0.44056496,  0.95336205, -1.4204836 ],
       [ 0.8258677 ,  0.61679095,  2.635723  ,  0.2618776 ],
       [ 0.68822306,  0.5139925 ,  1.7241151 , -0.64973044],
       [ 0.58990556,  0.44056496,  0.95336205, -1.4204836 ],
       [-1.6729115 ,  0.61679095,  2.635723  ,  0.2618776 ],
       [-1.3940929 ,  0.5139925 ,  1.7241151 , -0.64973044],
       [-1.1949369 ,  0.44056496,  0.95336205, -1.4204836 ],
       [-3.4764102 ,  0.5139925 ,  1.7241151 , -0.64973044],
       [ 3.324647  , -0.40770885,  2.635723  ,  0.2618776 ],
       [ 2.770539  , -0.33975735,  1.7241151 , -0.64973044],
       [ 2.374748  , -0.2912206 ,  0.95336205, -1.4204836 ],
       [ 0.8258677 , -0.40770885,  2.635723  ,  0.2618776 ],
       [ 0.68822306, -0.33975735,  1.7241151 , -0.64973044],
       [ 0.58990556, -0.2912206 ,  0.95336205, -1.4204836 ],
       [-1.6729115 , -0.40770885,  2.635723  ,  0.2618776 ],
       [-1.3940929 , -0.33975735,  1.7241151 , -0.64973044],
       [-1.1949369 , -0.2912206 ,  0.95336205, -1.4204836 ],
       [-3.4764102 , -0.33975735,  1.7241151 , -0.64973044],
       [ 2.770539  , -1.1935072 ,  1.7241151 , -0.64973044],
       [ 2.374748  , -1.0230062 ,  0.95336205, -1.4204836 ],
       [ 0.68822306, -1.1935072 ,  1.7241151 , -0.64973044],
       [ 0.58990556, -1.0230062 ,  0.95336205, -1.4204836 ],
       [-1.3940929 , -1.1935072 ,  1.7241151 , -0.64973044],
       [-1.1949369 , -1.0230062 ,  0.95336205, -1.4204836 ],
       [ 0.58990556, -1.7547917 ,  0.95336205, -1.4204836 ],
       [-1.1949369 , -1.7547917 ,  0.95336205, -1.4204836 ],
       [ 1.7293817 ,  1.7946172 ,  1.7241151 , -0.64973044],
       [ 1.4823273 ,  1.5382433 ,  0.95336205, -1.4204836 ],
       [-2.0873597 ,  1.5382433 ,  0.95336205, -1.4204836 ],
       [ 2.075258  ,  0.10454106,  2.635723  ,  0.2618776 ],
       [ 1.7293817 ,  0.08711755,  1.7241151 , -0.64973044],
       [ 1.4823273 ,  0.07467218,  0.95336205, -1.4204836 ],
       [-2.9223034 ,  0.10454106,  2.635723  ,  0.2618776 ],
       [-2.435253  ,  0.08711755,  1.7241151 , -0.64973044],
       [-2.0873597 ,  0.07467218,  0.95336205, -1.4204836 ],
       [ 1.7293817 , -1.6203825 ,  1.7241151 , -0.64973044],
       [ 1.4823273 , -1.3888993 ,  0.95336205, -1.4204836 ],
       [-2.435253  , -1.6203825 ,  1.7241151 , -0.64973044],
       [-2.0873597 , -1.3888993 ,  0.95336205, -1.4204836 ],
       [-0.26470166,  0.7056505 ,  0.2857051 , -2.088141  ],
       [-0.23529036,  0.6272449 , -0.30321017, -2.6770563 ],
       [-0.26470166, -1.8555993 ,  0.2857051 , -2.088141  ],
       [-0.23529036, -1.6494215 , -0.30321017, -2.6770563 ],
       [-1.7804753 ,  0.9604631 , -0.7066796 , -2.228993  ]])
    g[:, 0] = g[:, 0] * 640.0
    g[:, 1] = g[:, 1] * 480.0
    g[:, 2] = g[:, 2] * 640.0
    g[:, 3] = g[:, 3] * 480.0

    print(p, g)
    print(Giou_np(p, g))